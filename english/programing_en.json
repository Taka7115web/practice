{
  "concatenation": {
    "ja": "連結",
    "example": "Concatenation, in the context of programming, is the operation of joining two strings together. The term \"concatenation\" literally means to merge two things together."
  },
  "left out of the conversation": {
    "ja": "時代遅れの。会話に入れない、ついていけない。",
    "example": ""
  },
  "case sensitive": {
    "ja": "大文字と小文字を区別",
    "example": "Capable of distinguishing between uppercase and lowercase letters. A case-sensitive search finds only text that is an exact match of uppercase and lowercase letters."
  },
  "parentheses": {
    "ja": "小括弧",
    "example": "The values enclosed in parentheses (( )) are for information only."
  },
  "curly brackets": {
    "ja": "中括弧",
    "example": "We created a code block with curly brackets ({ }). The code inside this code block will execute when our function is invoked."
  },
  "square brackets": {
    "ja": "大括弧",
    "example": "Square brackets([ ]) indicate that the enclosed element is string."
  },
  "camel case": {
    "ja": "キャメルケース",
    "example": "Camel case is the use of a capital letter to begin the second word in a compound name or phrase, when it is not separated from the first word by a space:"
  },
  "snake case": {
    "ja": "スネークケース",
    "example": "Frankly speaking, forExample is a camel case, for_example is a snake case"
  },
  "placeholder ": {
    "ja": "代替物",
    "example": ""
  },
  "exclamation mark": {
    "ja": "!",
    "example": ""
  },
  "perpendicular": {
    "ja": "垂線",
    "example": ""
  },
  "integer": {
    "ja": "整数",
    "example": ""
  },
  "vartex": {
    "ja": "(三角形の)頂点。複数形はvartices",
    "example": "triangle vertices"
  },
  "optimize": {
    "ja": "最適化する",
    "example": ""
  },
  "substring": {
    "ja": "部分文字列(文節)",
    "example": ""
  },
  "float": {
    "ja": "浮動小数点値(小数)",
    "example": ""
  },
  "algebra": {
    "ja": "代数",
    "example": ""
  },
  "associative array": {
    "ja": "連想配列",
    "example": ""
  },
  "assign": {
    "ja": "代入する",
    "example": ""
  },
  "incorporate ": {
    "ja": "組み込む",
    "example": ""
  },
  "concatenate ": {
    "ja": "連結する",
    "example": ""
  },
  "convention": {
    "ja": "慣例。しきたり",
    "example": ""
  },
  "evaluate": {
    "ja": "(式を)評価する。実行する",
    "example": ""
  },
  "the less than operator": {
    "ja": "<",
    "example": ""
  },
  "the greater than operator": {
    "ja": ">",
    "example": ""
  },
  "The less than or equal to operator": {
    "ja": "<=",
    "example": ""
  },
  "The greater than or equal to operator": {
    "ja": ">=",
    "example": ""
  },
  "the identical operator": {
    "ja": "===",
    "example": ""
  },
  "the not identical operator": {
    "ja": "!==",
    "example": ""
  },
  "the equal operator": {
    "ja": "==",
    "example": ""
  },
  "Separation of concerns": {
    "ja": "関心の分離（ソフトウェア工学語）",
    "example": ""
  },
  "modularity": {
    "ja": "モジュール性",
    "example": "Modularity is the idea of separating a program into distinct, manageable chunks where each provides a piece of the overall functionality"
  },
  "decimal point": {
    "ja": "小数点",
    "example": ""
  },
  "modulo": {
    "ja": "余剰",
    "example": "The modulo is the remainder after the left operand is divided by the right operand."
  },
  "modulo operator": {
    "ja": "%(モジュロオペレーター)。",
    "example": "The modulo operator returns the remainder after the left operand is divided by the right operand."
  },
  "arithmetic": {
    "ja": "算術",
    "example": ""
  },
  "yield": {
    "ja": "生み出す。もたらす。屈する。",
    "example": ""
  },
  "Regex": {
    "ja": "正規表現",
    "example": "Regex is same meaning as a regular expression. A regular expression is a sequence of characters representing a pattern."
  },
  "applet": {
    "ja": "アプリケーションの中に組み込まれて実行される小さなプログラム",
    "example": ""
  },
  "digits": {
    "ja": "数字",
    "example": ""
  },
  "hat": {
    "ja": "^",
    "example": "In regex, the ^ ensures that the matched text begins with the word right after ^, and the $ ensures the matched text ends with the word right before $."
  },
  "dollar sign": {
    "ja": "$",
    "example": "In regex, the ^ ensures that the matched text begins with the word right after ^, and the $ ensures the matched text ends with the word right before $."
  },
  "man-in-the middle attack": {
    "ja": "中間者攻撃",
    "example": ""
  },
  "sanitizing(sanitization)": {
    "ja": "コード無害化",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  },
  "": {
    "ja": "",
    "example": ""
  }


}