


/* 関数を使ってpxをremに置き換える */

@function rem($px) {
  @return ($px / 15) * 1rem;
}

font-size: rem(12);



/* 縦横比変えず高さを求める */
/* $width :238;
$height :111; */
@function height($vw) {
  @return (($height * $vw) / $width)/750*100vw;
}


/* IE用メディアクエリ */
@media screen and (-ms-high-contrast: active),
screen and (-ms-high-contrast: none) {
  // ここに記述
}


/* ハンバーガーボタン
.crossが付与されたときにスタイル変更 */

// <div class="btn">
// <hr>
// <hr>
// <hr>
// </div>
// <script type="text/javascript">
// document.querySelector(".btn").addEventListener("click", (e) => {
//   var targets = document.querySelectorAll(".btn hr");
//   targets.forEach((el) => {
//     el.classList.add("cross")
//   })
// });
// </script>

.btn {
  width: 100px;
  height: 100px;
  position: fixed;
  top: 0;
  right: 0;
  z-index: 999;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #fff;

  hr {
    width: 30%;
    height: 3px;
    background-color: #000;
    border-top: none;
    margin: 0 auto;
    position: absolute;
    top: 45%;
    right: 40%;
    transition: 1s;

    &:nth-of-type(1) {
      margin-top: -10%;

      &.cross {
        margin-top: 0;
        transform: rotate(45deg);
      }
    }

    &:nth-of-type(2) {
      &.cross {
        opacity: 0;
        transform: translate(-20px);
      }
    }

    &:nth-of-type(3) {
      margin-top: 10%;

      &.cross {
        margin-top: 0;
        transform: rotate(-45deg);
      }
    }
  }

}



/* svg clipPath */

// ※2つのsvgのviewBoxは同じ値でなければならない

// <svg width="100%"
// height="100%"
// viewBox="0 0 600 500"
// class=""
// ><g><image xlink:href="/assets/img/dummy.png"
// alt=""
// width="100%"
// height="100%"
// clip-path="url(#path)"
// /></g></svg> 

// <svg xmlns="http://www.w3.org/2000/svg"
// width="0"
// height="0"
// viewBox="0 0 600 500"
// style="position: absolute; top: 0; left: 0"
// clipPathUnits="objectBoundingBox"
// class="path"
// ><clipPath id="path"><path d="M300,0,600,500H0Z"fill="none"/></clipPath></svg>

// cssで指定する際は下記
image{
  clip-path: url("#path");
  clip-path: polygon(50% 0%, 0% 100%, 100% 100%); //三角形
}