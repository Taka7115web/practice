<!-- トリガーとなる要素に「js-modal-trigger」と付与して、下の記述全部そのまま記述すれば動く -->

<div class="m-modal__trigger js-modal-trigger"></div>
<div class="m-modal js-modal">
  <div class="m-modal__wrapper">
    <div class="m-modal__cont js-modal-cont">

      <div class="m-modal__btn js-modal-btn">
        <div class="m-modal__btnWrap">
          <div></div>
          <div></div>
        </div>
      </div>

    </div>
  </div>
</div>


<!-- @charset "utf-8";


body {
  &.modal_open {
    overflow: hidden;
    height: 100vh;
  }
}

.m-modal__trigger {
  width: 50px;
  height: 50px;
  background-color: #000;
}

.m-modal {
  opacity: 0;
  pointer-events: none;
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  overflow: auto;
  background-color: #717171;
  z-index: 999;
  transition: .7s;

  &.is_open {
    opacity: 1;
    pointer-events: inherit;
  }

  &__wrapper{
    padding: 145px 0;
  }

  &__cont {
    width: 740px;
    height: 150vh;
    margin: 0 auto;
    background-color: #fff;
    position: relative;
  }


  &__btn {
    width: 35px;
    height: 35px;
    background-color: white;
    position: absolute;
    top: -40px;
    right: -40px;
    cursor: pointer;
  }

  &__btnWrap {
    width: 100%;
    height: 100%;
    position: relative;

    & div {
      width: 40%;
      height: 1px;
      background-color: #000;
      position: absolute;
      top: 50%;
      left: 50%;
      transform-origin: center;

      &:nth-of-type(1) {
        transform: translate(-50%, -50%) rotate(45deg);
      }

      &:nth-of-type(2) {
        transform: translate(-50%, -50%) rotate(-45deg);
      }
    }
  }
} -->



<!-- class Modal {
  constructor() {
    this.modal = $(".js-modal");
    this.trigger = $(".js-modal-trigger");
    this.close = $(".js-modal-btn");
    this.cont = $(".js-modal-cont");
  }
  init() {

    if (this.modal) {
      this.activate();
    }

  }

  activate() {
    this.modal_open();
    this.modal_close();
  }

  modal_open() {
    this.trigger.on("click", (e) => {
      var i = this.trigger.index($(e.currentTarget));
      this.modal.eq(i).addClass("is_open");
      $("body").addClass("modal_open");
    });
  }

  modal_close() {
    this.close.on("click", () => {
      this.reset();
    });
    this.modal.on("click", () => {
      this.reset();
      this.cont.on('click', (e) => {
        e.stopPropagation();
      });
    });
  }

  reset() {
    this.modal.removeClass("is_open");
    $("body").removeClass("modal_open");
  }

}

export default Modal; -->


<!-- https://wheelchair-coder.com/145/ -->
<!-- https://qiita.com/akashixi/items/f2a3662510630dc2f358 -->