<% var meta = {
    pageTitle:'',
    description:'foo',
    keywords:'foo',
    url:'http://www.example.com/'
  };
  var page={
      root:filePath.dir
  };
%>
<% var imgpath = '/assets/img/coding/page/' %>
<%- include(page.root + 'common/meta/coding/_page', {param:'param'}); %>
<div id="c-page">
  <main class="c-page">


    <page name="work27" tab="3" csssp jssp>


      <template slot="mainCont">
        <div class="bg">
          <div class="dokka_n">
            <!-- ド -->
            <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 121.3 155">
              <path id="do"
                d="M139.433-35.559l-13.813,18.39Q99.376-32.62,69.938-47.774V24.66h-24v-138h24v42.432Q101.621-55.909,139.433-35.559Zm2.5-52.908-12,9.195a199.046,199.046,0,0,0-22.358-21.406l11.741-8.367q14.243,12.136,22.618,20.577ZM126.743-76.484l-12.087,9.119Q107.49-75.128,91.519-89.6L103-97.739a269.388,269.388,0,0,1,23.742,21.255Z"
                transform="translate(-24.4 137.506) rotate(-10)" fill="red" stroke="#fff" stroke-width="2" />
            </svg>


            <!-- /ド -->
            <!-- ッ -->
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 51.1 51">
              <path id="tt"
                d="M34.476-19A72.124,72.124,0,0,0,25.7-34.214l7.107-3.418q3.842,4.375,8.637,14.561Zm22-16.406Q55.149-17.4,47.975-8.118T25.329,5.845l-4.794-8.2q12.139-2.8,18.906-9.485T47.7-36.162Zm-35.6,20.679a126.717,126.717,0,0,0-8.4-15.962l7.311-3.521A111.567,111.567,0,0,1,28.253-18.8Z"
                transform="translate(-10.246 37.509) rotate(6.024)" fill="#640000" stroke="#fff" stroke-width="2" />
            </svg>

            <!-- /ッ -->
            <!-- カ -->
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 96.5 108">
              <path id="ka"
                d="M94.681-61.338q-.323,13.535-1.29,26.56T91.266-13Q90.11-4.243,88.578-1.45A15.3,15.3,0,0,1,84.733,3.2a16.069,16.069,0,0,1-5.646,2.82q-3.334.967-10.915.967-3.656,0-8.066-.322L56.02-8q14.357.43,16.023-.3A5.406,5.406,0,0,0,74.6-10.5q.887-1.477,2.285-12.354t2.151-24.412H57.579Q56.719-30.347,45.8-14.421a85.632,85.632,0,0,1-27.53,25.7L7.681-1.182A72.386,72.386,0,0,0,31.608-21.216q9.517-12.407,10.431-26.05H13.649V-61.338H42.631V-87.871H58.009v26.533Z"
                transform="translate(-5.215 88.266) rotate(4.012)" fill="#fff700" stroke="#fff" stroke-width="2" />
            </svg>

            <!-- /カ -->
            <!-- ー -->
            <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 100 13">
              <defs>
                <linearGradient id="linear-gradient" y1="1" x2="1" gradientUnits="objectBoundingBox">
                  <stop offset="0" stop-color="#edff00" />
                  <stop offset="1" stop-color="#fb0000" />
                </linearGradient>
              </defs>
              <path id="_-" data-name="-" d="M108.691-28.455h-100v-13h100Z" transform="translate(-8.691 41.455)"
                fill="url(#linear-gradient)" />
            </svg>


            <!-- /ー -->
            <!-- ン -->
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 76 73">
              <path id="n"
                d="M40.5-50.713l-7.927,9.36a183.65,183.65,0,0,0-21.33-16.918l6.92-9.1A156.7,156.7,0,0,1,40.5-50.713ZM81.272-47.2Q70.849-26.807,56.966-15.337T14.484,1.582L9.272-10.5q23.65-3.208,37.38-12.612T70.367-53Z"
                transform="translate(-6.664 70.102) rotate(-0.974)" fill="#ff4c00" stroke="#fff" stroke-width="2" />
            </svg>

            <!-- /ン -->
            <!-- ! -->
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 30 122">
              <path id="_" data-name="!"
                d="M42.18-75.586,39.349,6.471H20.376L17.7-75.586ZM29.939,18.966A14.316,14.316,0,0,1,39.884,22.7a11.774,11.774,0,0,1,4.131,9.067,11.618,11.618,0,0,1-4.131,8.914,14.316,14.316,0,0,1-9.945,3.733,14.041,14.041,0,0,1-9.869-3.733,11.71,11.71,0,0,1-4.055-8.914A11.87,11.87,0,0,1,20.07,22.7a14.041,14.041,0,0,1,9.869-3.734Z"
                transform="translate(-15.014 76.586)" stroke="#fff" stroke-width="2" />
            </svg>

            <!-- /! -->
            <!-- !! -->
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 57.1 142">
              <path id="_" data-name="!!"
                d="M51.928-105.82,48.736-12.829H27.34L24.32-105.82ZM38.124,1.331A16.1,16.1,0,0,1,49.34,5.562,13.371,13.371,0,0,1,54,15.837a13.193,13.193,0,0,1-4.659,10.1A16.1,16.1,0,0,1,38.124,30.17a15.791,15.791,0,0,1-11.13-4.231,13.3,13.3,0,0,1-4.573-10.1A13.481,13.481,0,0,1,26.994,5.562a15.791,15.791,0,0,1,11.13-4.231Z"
                transform="translate(-15.681 101.478) rotate(10)" stroke="#fff" stroke-width="2" />
            </svg>

            <!-- /!! -->
            <div class="redo">
              <p>もう１回！</p>
            </div>
          </div>
          <!--dokka_n-->
        </div>
      </template>



      <template slot="html">
        &lt;div class="bg"&gt;

        &lt;div class="dokka_n"&gt;

        &lt;!-- ド --&gt;
        &lt;svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 96 138"&gt;
        &lt;/svg&gt;

        &lt;!-- ッ --&gt;
        &lt;svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 48 47"&gt;
        &lt;/svg&gt;

        &lt;!-- カ --&gt;
        &lt;svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 93 104"&gt;
        &lt;/svg&gt;

        &lt;!-- ー --&gt;
        &lt;svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 100 13"&gt;
        &lt;/svg&gt;

        &lt;!-- ン --&gt;
        &lt;svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 73 70"&gt;
        &lt;/svg&gt;

        &lt;!-- ! --&gt;
        &lt;svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 28 120"&gt;
        &lt;/svg&gt;

        &lt;!-- !! --&gt;
        &lt;svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 55 140"&gt;
        &lt;/svg&gt;

        &lt;div class="redo"&gt;
        &lt;p&gt;もう１回！&lt;/p&gt;
        &lt;/div&gt;

        &lt;/div&gt;
        &lt;!--dokka_n--&gt;

        &lt;/div&gt;
        &lt;!--bg--&gt;
      </template>

      <template slot="css">
        .bg {
        width: 100%;
        height: 100%;
        background: url(../../assets/img/coding/page/kv/explosion.png) #000;
        background-size: contain;
        }

        .dokka_n {
        width: 100%;
        height: 100%;
        padding: 0 5%;
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        position: relative;
        }

        svg {
        margin: 0 12px;
        opacity: 0;
        }

        /* ド */
        svg:nth-child(1) {
        width: 96px;
        }

        /* ッ */
        svg:nth-child(2) {
        width: 48px;
        }

        /* カ */
        svg:nth-child(3) {
        width: 93px;
        }

        /* ー */
        svg:nth-child(4) {
        width: 100px;
        transform-origin: left;
        }

        /* ン */
        svg:nth-child(5) {
        width: 73px;
        }

        /* ! */
        svg:nth-child(6) {
        width: 28px;
        margin-left: 20px;
        }

        /* !! */
        svg:nth-child(7) {
        width: 55px;
        }

        .redo {
        opacity: 0;
        width: 20%;
        margin: 0 auto;
        padding: 1%;
        background-color: rgb(18, 145, 219);
        border: 1px solid rgb(85, 0, 223);
        box-shadow: 0 2px 4px #000;
        border-radius: 5em;
        position: absolute;
        bottom: 10%;
        left: 50%;
        transform: translateX(-50%);
        }

        .redo p {
        font-size: 12px;
        text-align: center;
        font-weight: bold;
        color: #fff;
        }
      </template>

      <template slot="csssp">
        .bg {
        width: 100%;
        height: 100%;
        background: url(../../assets/img/coding/page/kv/explosion.png) #000;
        background-size: contain;
        }

        .dokka_n {
        width: 100%;
        height: 100%;
        padding: 0 5%;
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        position: relative;
        }

        svg {
        margin: 0 2vw;
        }

        /* ド */
        svg:nth-child(1) {
        width: 25.5vw;
        }

        /* ッ */
        svg:nth-child(2) {
        width: 13vw;
        }

        /* カ */
        svg:nth-child(3) {
        width: 27vw;
        }

        /* ー */
        svg:nth-child(4) {
        width: 26.5vw;
        transform-origin: left;
        }

        /* ン */
        svg:nth-child(5) {
        width: 21vw;
        }

        /* ! */
        svg:nth-child(6) {
        width: 7.5vw;
        margin-left: 2.5vw;
        }

        /* !! */
        svg:nth-child(7) {
        width: 14.5vw;
        }

        .redo {
        opacity: 0;
        width: 30%;
        margin: 0 auto;
        padding: 1%;
        background-color: rgb(18, 145, 219);
        border: 1px solid rgb(85, 0, 223);
        box-shadow: 0 2px 4px #000;
        border-radius: 5em;
        position: absolute;
        bottom: 10%;
        left: 50%;
        transform: translateX(-50%);
        }

        .redo p {
        font-size: 3vw;
        text-align: center;
        font-weight: bold;
        color: #fff;
        }
      </template>

      <template slot="js">
        // インポート
        import gsap from "gsap";
        import {
        TweenMax,
        TimelineMax,
        } from 'gsap/all';

        // 変数化
        var p = document.querySelector(".dokka_n");
        var txt = p.querySelectorAll("svg");
        var d = txt[0];
        var t = txt[1];
        var k = txt[2];
        var _ = txt[3];
        var n = txt[4];
        var s = txt[5];
        var ss = txt[6];
        var b = document.querySelector(".redo");

        // アニメーション前のスタイルの定義
        var setting = () =&gt; {

        // テキストの透明度を0に
        TweenMax.set(txt, {
        opacity: 0
        })

        // "ド"を少し小さく配置
        TweenMax.set(d, {
        scale: .5,
        })
        // "ッ"をかなり小さく配置
        TweenMax.set(t, {
        scale: .1,
        rotation: 10,
        })
        // "カ"を少し回転させて配置
        TweenMax.set(k, {
        y: -20,
        rotation: 270,
        })
        // "ー"の幅を狭く配置
        TweenMax.set(_, {
        y: -25,
        rotation: -8,
        scaleX: .2
        })
        // "ン"を少し右に配置
        TweenMax.set(n, {
        y: -50,
        x: 30,
        })
        // 1つ目の"!"を少し上に配置
        TweenMax.set(s, {
        y: -180,
        })
        // 2つ目の"!"を少し上に配置
        TweenMax.set(ss, {
        y: -180,
        })
        // ボタンの透明度を0に&少し下に配置
        TweenMax.set(b, {
        opacity: 0,
        y: 10,
        })

        } //setting()

        // アニメーション関数
        var ani = () =&gt; {

        // インスタンス作成
        var tm = new TimelineMax();

        // ド
        tm.to(d, .3, {
        opacity: 1,
        scale: 1,
        ease: "back.out(120)",
        }) // ド

        // ッ
        tm.to(t, .3, {
        opacity: 1,
        scale: 1,
        rotation: 0,
        ease: "elastic.out(20)",
        }) // ッ

        // カ
        tm.to(k, .4, {
        opacity: 1,
        rotation: 0,
        ease: "elastic.out(10)",
        }) // カ

        // ー
        tm.to(_, 1, {
        opacity: 1,
        scaleX: 1,
        ease: "back.out(50)",
        }) // ー

        // ン
        tm.to(n, .3, {
        opacity: 1,
        y: -45,
        x: 0,
        }) // ン

        // 1つ目の!
        tm.to(s, .3, {
        opacity: 1,
        y: -60,
        ease: "elastic.out(1, 0.3)"
        }) // 1つ目の!

        // 2つ目の!
        tm.to(ss, .3, {
        opacity: 1,
        y: -65,
        ease: "elastic.out(1, 0.3)",
        // コールバック関数実行
        onComplete: btnShow
        }) // 2つ目の!

        } //ani()

        // 2つ目の"!"のアニメーション終了後、ボタンを表示
        var btnShow = () =&gt; {
        TweenMax.to(b, .5, {
        opacity: 1,
        y: 0,
        delay: .5
        })
        }

        /*mountedのタイミングで実行*/
        document.addEventListener('DOMContentLoaded', () =&gt; {
        setting();
        })

        /*createdのタイミングで実行*/
        window.onload = ani;

        // ボタンを押したらアニメーション再実行
        b.addEventListener("click", () =&gt; {
        setting();
        ani();
        });
      </template>

      <template slot="jssp">
        // インポート
        import gsap from "gsap";
        import {
        TweenMax,
        TimelineMax,
        } from 'gsap/all';

        // 変数化
        var p = document.querySelector(".dokka_n");
        var txt = p.querySelectorAll("svg");
        var d = txt[0];
        var t = txt[1];
        var k = txt[2];
        var _ = txt[3];
        var n = txt[4];
        var s = txt[5];
        var ss = txt[6];
        var b = document.querySelector(".redo");

        // アニメーション前のスタイルの定義
        var setting = () =&gt; {

        // テキストの透明度を0に
        TweenMax.set(txt, {
        opacity: 0
        })

        // "ド"を少し小さく配置
        TweenMax.set(d, {
        scale: .5,
        })
        // "ッ"をかなり小さく配置
        TweenMax.set(t, {
        scale: .1,
        rotation: 10,
        })
        // "カ"を少し回転させて配置
        TweenMax.set(k, {
        y: -10,
        rotation: 270,
        })
        // "ー"の幅を狭く配置
        TweenMax.set(_, {
        y: -12,
        rotation: -7,
        scaleX: .2
        })
        // "ン"を少し右に配置
        TweenMax.set(n, {
        y: -25,
        x: 30,
        })
        // 1つ目の"!"を少し上に配置
        TweenMax.set(s, {
        y: -90,
        })
        // 2つ目の"!"を少し上に配置
        TweenMax.set(ss, {
        y: -90,
        })
        // ボタンの透明度を0に&少し下に配置
        TweenMax.set(b, {
        opacity: 0,
        y: 5,
        })

        } //setting()

        // アニメーション関数
        var ani = () =&gt; {

        // インスタンス作成
        var tm = new TimelineMax();

        // ド
        tm.to(d, .3, {
        opacity: 1,
        scale: 1,
        ease: "back.out(180)",
        }) // ド

        // ッ
        tm.to(t, .3, {
        opacity: 1,
        scale: 1,
        rotation: 0,
        ease: "elastic.out(20)",
        }) // ッ

        // カ
        tm.to(k, .4, {
        opacity: 1,
        rotation: 0,
        ease: "elastic.out(10)",
        }) // カ

        // ー
        tm.to(_, 1, {
        opacity: 1,
        scaleX: 1,
        ease: "back.out(50)",
        }) // ー

        // ン
        tm.to(n, .3, {
        opacity: 1,
        y: -22,
        x: 0,
        }) // ン

        // 1つ目の!
        tm.to(s, .3, {
        opacity: 1,
        y: -30,
        ease: "elastic.out(1, 0.3)"
        }) // 1つ目の!

        // 2つ目の!
        tm.to(ss, .3, {
        opacity: 1,
        y: -32,
        ease: "elastic.out(1, 0.3)",
        // コールバック関数実行
        onComplete: btnShow
        }) // 2つ目の!

        } //ani()

        // 2つ目の"!"のアニメーション終了後、ボタンを表示
        var btnShow = () =&gt; {
        TweenMax.to(b, .5, {
        opacity: 1,
        y: 0,
        delay: .5
        })
        }

        /*mountedのタイミングで実行*/
        document.addEventListener('DOMContentLoaded', () =&gt; {
        setting();
        })

        /*createdのタイミングで実行*/
        window.onload = ani;

        // ボタンを押したらアニメーション再実行
        b.addEventListener("click", () =&gt; {
        setting();
        ani();
        });
      </template>


    </page>
  </main>
</div>

<%- include(page.root + 'common/_footer', {param:'param'}); %>

<!-- css manipulation ----------------------------------------- -->
<style type="text/css">
  .bg {
    width: 100%;
    height: 100%;
    background: url(../../assets/img/coding/page/kv/explosion.png) #000;
    background-size: contain;
  }

  .dokka_n {
    width: 100%;
    height: 100%;
    padding: 0 5%;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    position: relative;
  }

  svg {
    margin: 0 12px;
    opacity: 0;
  }

  /* ド */
  svg:nth-child(1) {
    width: 96px;
  }

  /* ッ */
  svg:nth-child(2) {
    width: 48px;
  }

  /* カ */
  svg:nth-child(3) {
    width: 93px;
  }

  /* ー */
  svg:nth-child(4) {
    width: 100px;
    transform-origin: left;
  }

  /* ン */
  svg:nth-child(5) {
    width: 73px;
  }

  /* ! */
  svg:nth-child(6) {
    width: 28px;
    margin-left: 20px;
  }

  /* !! */
  svg:nth-child(7) {
    width: 55px;
  }

  .redo {
    opacity: 0;
    width: 20%;
    margin: 0 auto;
    padding: 1%;
    background-color: rgb(18, 145, 219);
    border: 1px solid rgb(85, 0, 223);
    box-shadow: 0 2px 4px #000;
    border-radius: 5em;
    position: absolute;
    bottom: 10%;
    left: 50%;
    transform: translateX(-50%);
  }

  .redo p {
    font-size: 12px;
    text-align: center;
    font-weight: bold;
    color: #fff;
  }


  @media screen and (max-width: 750px) {
    .dokka_n {
      width: 100%;
      height: 100%;
      padding: 0 5%;
      display: flex;
      justify-content: center;
      align-items: center;
      cursor: pointer;
      position: relative;
    }

    svg {
      margin: 0 2vw;
    }

    /* ド */
    svg:nth-child(1) {
      width: 25.5vw;
    }

    /* ッ */
    svg:nth-child(2) {
      width: 13vw;
    }

    /* カ */
    svg:nth-child(3) {
      width: 27vw;
    }

    /* ー */
    svg:nth-child(4) {
      width: 26.5vw;
      transform-origin: left;
    }

    /* ン */
    svg:nth-child(5) {
      width: 21vw;
    }

    /* ! */
    svg:nth-child(6) {
      width: 7.5vw;
      margin-left: 2.5vw;
    }

    /* !! */
    svg:nth-child(7) {
      width: 14.5vw;
    }

    .redo {
      opacity: 0;
      width: 30%;
      margin: 0 auto;
      padding: 1%;
      background-color: rgb(18, 145, 219);
      border: 1px solid rgb(85, 0, 223);
      box-shadow: 0 2px 4px #000;
      border-radius: 5em;
      position: absolute;
      bottom: 10%;
      left: 50%;
      transform: translateX(-50%);
    }

    .redo p {
      font-size: 3vw;
      text-align: center;
      font-weight: bold;
      color: #fff;
    }
  }

</style>

<!-- call the common javascript ------------------------------------ -->
<script type="text/javascript" src="<%-conf.path.js%>coding/c-page.js"></script>



</body>

</html>
